{"ast":null,"code":"var _jsxFileName = \"D:\\\\2.Programavimas\\\\Projects\\\\JAVA\\\\IdeaProject\\\\IBMchallenge\\\\src\\\\components\\\\Giphy.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState } from 'react';\nimport { GiphyFetch } from '@giphy/js-fetch-api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst giphy = process.env.REACT_APP_GIPHY_KEY;\n\nconst Giphy = () => {\n  _s();\n\n  const [search, setSearch] = useState('');\n  const [results, setResults] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  const handleInput = e => {\n    setSearch(e.target.value);\n  };\n\n  const handleSubmit = e => {\n    if (search.length === 0) {\n      //set error state to true\n      setLoading(true);\n      return;\n    }\n\n    console.log(search);\n    console.log(giphy);\n    apiCall(); //change error state back to false\n\n    setSearch('');\n    setLoading(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Animated Text Generator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Type text into the form and hit submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"input-field\",\n      placeholder: \"Search Gifs\",\n      value: search,\n      onChange: handleInput\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"submit-btn\",\n      onClick: handleSubmit,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 15\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Giphy, \"6EtuFCTanIvfUj9dF9AoYpAoS4k=\");\n\n_c = Giphy;\nexport default Giphy;\n\nvar _c;\n\n$RefreshReg$(_c, \"Giphy\");","map":{"version":3,"sources":["D:/2.Programavimas/Projects/JAVA/IdeaProject/IBMchallenge/src/components/Giphy.js"],"names":["React","useState","GiphyFetch","giphy","process","env","REACT_APP_GIPHY_KEY","Giphy","search","setSearch","results","setResults","loading","setLoading","handleInput","e","target","value","handleSubmit","length","console","log","apiCall"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,QAAR,QAAuB,OAAvB;AACA,SAASC,UAAT,QAA2B,qBAA3B;;AAEA,MAAMC,KAAK,GAAGC,OAAO,CAACC,GAAR,CAAYC,mBAA1B;;AACA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAElB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACS,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACW,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,CAAC,KAAD,CAAtC;;AAEA,QAAMa,WAAW,GAAIC,CAAD,IAAO;AACvBN,IAAAA,SAAS,CAACM,CAAC,CAACC,MAAF,CAASC,KAAV,CAAT;AACD,GAFH;;AAIA,QAAMC,YAAY,GAAIH,CAAD,IAAO;AACxB,QAAGP,MAAM,CAACW,MAAP,KAAkB,CAArB,EAAwB;AAEtB;AACAN,MAAAA,UAAU,CAAC,IAAD,CAAV;AACA;AACD;;AAEDO,IAAAA,OAAO,CAACC,GAAR,CAAYb,MAAZ;AACAY,IAAAA,OAAO,CAACC,GAAR,CAAYlB,KAAZ;AAIAmB,IAAAA,OAAO,GAbiB,CAcxB;;AACAb,IAAAA,SAAS,CAAC,EAAD,CAAT;AACAI,IAAAA,UAAU,CAAC,KAAD,CAAV;AAED,GAlBH;;AAoBE,sBACI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BAEM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFN,eAGM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHN,eAKM;AAAO,MAAA,SAAS,EAAC,aAAjB;AACA,MAAA,WAAW,EAAC,aADZ;AAEA,MAAA,KAAK,EAAEL,MAFP;AAGA,MAAA,QAAQ,EAAEM;AAHV;AAAA;AAAA;AAAA;AAAA,YALN,eAUM;AAAQ,MAAA,SAAS,EAAC,YAAlB;AAA+B,MAAA,OAAO,EAAEI,YAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAVN;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAeH,CA7CD;;GAAMX,K;;KAAAA,K;AA+CN,eAAeA,KAAf","sourcesContent":["import React from 'react';\r\nimport {useState} from 'react';\r\nimport { GiphyFetch } from '@giphy/js-fetch-api';\r\n\r\nconst giphy = process.env.REACT_APP_GIPHY_KEY\r\nconst Giphy = () => {\r\n\r\n  const [search, setSearch] = useState('')\r\n  const [results, setResults] = useState([])\r\n  const [loading, setLoading] = useState(false)\r\n\r\n  const handleInput = (e) => {\r\n      setSearch(e.target.value)\r\n    }\r\n\r\n  const handleSubmit = (e) => {\r\n      if(search.length === 0) {\r\n\r\n        //set error state to true\r\n        setLoading(true)\r\n        return\r\n      }\r\n\r\n      console.log(search)\r\n      console.log(giphy)\r\n\r\n\r\n\r\n      apiCall()\r\n      //change error state back to false\r\n      setSearch('')\r\n      setLoading(false)\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"App\">\r\n\r\n              <h1>Animated Text Generator</h1>\r\n              <h3>Type text into the form and hit submit</h3>\r\n\r\n              <input className='input-field'\r\n              placeholder=\"Search Gifs\"\r\n              value={search}\r\n              onChange={handleInput} />\r\n\r\n              <button className='submit-btn' onClick={handleSubmit}>Submit</button>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Giphy"]},"metadata":{},"sourceType":"module"}