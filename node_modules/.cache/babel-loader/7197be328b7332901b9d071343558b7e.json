{"ast":null,"code":"\"use strict\";\n/**\n * Copyright 2019 IBM Corp. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.BearerTokenAuthenticator = void 0;\n\nvar extend = require(\"extend\");\n\nvar utils_1 = require(\"../utils\");\n\nvar authenticator_1 = require(\"./authenticator\");\n/**\n * The BearerTokenAuthenticator will set a user-provided bearer token\n *   in requests.\n *\n * The bearer token will be sent as an Authorization header in the form:\n *\n *      Authorization: Bearer <bearer-token>\n */\n\n\nvar BearerTokenAuthenticator =\n/** @class */\nfunction (_super) {\n  __extends(BearerTokenAuthenticator, _super);\n  /**\n   * Create a new BearerTokenAuthenticator instance.\n   *\n   * @param {object} options Configuration options for bearer authentication.\n   * @param {string} options.bearerToken The bearer token to be added\n   *   to requests.\n   * @throws {Error} The configuration bearerToken is not valid, or unspecified.\n   */\n\n\n  function BearerTokenAuthenticator(options) {\n    var _this = _super.call(this) || this;\n\n    _this.requiredOptions = ['bearerToken'];\n    utils_1.validateInput(options, _this.requiredOptions);\n    _this.bearerToken = options.bearerToken;\n    return _this;\n  }\n  /**\n   * Set a new bearer token to be sent in subsequent requests.\n   *\n   * @param {string} bearerToken The bearer token that will be sent in service\n   *   requests.\n   */\n\n\n  BearerTokenAuthenticator.prototype.setBearerToken = function (bearerToken) {\n    this.bearerToken = bearerToken;\n  };\n  /**\n   * Add a bearer token to the `request`. The bearer token information\n   * will be set in the Authorization property of`request.headers` in the form:\n   *\n   *      Authorization: Bearer <bearer-token>\n   *\n   * @param {object} requestOptions - The request to augment with authentication\n   *   information.\n   * @param {object.<string, string>} requestOptions.headers - The headers the\n   *   authentication information will be added to.\n   */\n\n\n  BearerTokenAuthenticator.prototype.authenticate = function (requestOptions) {\n    var _this = this;\n\n    return new Promise(function (resolve) {\n      var authHeader = {\n        Authorization: \"Bearer \" + _this.bearerToken\n      };\n      requestOptions.headers = extend(true, {}, requestOptions.headers, authHeader);\n      resolve();\n    });\n  };\n\n  return BearerTokenAuthenticator;\n}(authenticator_1.Authenticator);\n\nexports.BearerTokenAuthenticator = BearerTokenAuthenticator;","map":{"version":3,"sources":["D:/2.Programavimas/Projects/JAVA/IdeaProject/IBMchallenge/node_modules/ibm-cloud-sdk-core/auth/authenticators/bearer-token-authenticator.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","defineProperty","exports","value","BearerTokenAuthenticator","extend","require","utils_1","authenticator_1","_super","options","_this","call","requiredOptions","validateInput","bearerToken","setBearerToken","authenticate","requestOptions","Promise","resolve","authHeader","Authorization","headers","Authenticator"],"mappings":"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","sourcesContent":["\"use strict\";\n/**\n * Copyright 2019 IBM Corp. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BearerTokenAuthenticator = void 0;\nvar extend = require(\"extend\");\nvar utils_1 = require(\"../utils\");\nvar authenticator_1 = require(\"./authenticator\");\n/**\n * The BearerTokenAuthenticator will set a user-provided bearer token\n *   in requests.\n *\n * The bearer token will be sent as an Authorization header in the form:\n *\n *      Authorization: Bearer <bearer-token>\n */\nvar BearerTokenAuthenticator = /** @class */ (function (_super) {\n    __extends(BearerTokenAuthenticator, _super);\n    /**\n     * Create a new BearerTokenAuthenticator instance.\n     *\n     * @param {object} options Configuration options for bearer authentication.\n     * @param {string} options.bearerToken The bearer token to be added\n     *   to requests.\n     * @throws {Error} The configuration bearerToken is not valid, or unspecified.\n     */\n    function BearerTokenAuthenticator(options) {\n        var _this = _super.call(this) || this;\n        _this.requiredOptions = ['bearerToken'];\n        utils_1.validateInput(options, _this.requiredOptions);\n        _this.bearerToken = options.bearerToken;\n        return _this;\n    }\n    /**\n     * Set a new bearer token to be sent in subsequent requests.\n     *\n     * @param {string} bearerToken The bearer token that will be sent in service\n     *   requests.\n     */\n    BearerTokenAuthenticator.prototype.setBearerToken = function (bearerToken) {\n        this.bearerToken = bearerToken;\n    };\n    /**\n     * Add a bearer token to the `request`. The bearer token information\n     * will be set in the Authorization property of`request.headers` in the form:\n     *\n     *      Authorization: Bearer <bearer-token>\n     *\n     * @param {object} requestOptions - The request to augment with authentication\n     *   information.\n     * @param {object.<string, string>} requestOptions.headers - The headers the\n     *   authentication information will be added to.\n     */\n    BearerTokenAuthenticator.prototype.authenticate = function (requestOptions) {\n        var _this = this;\n        return new Promise(function (resolve) {\n            var authHeader = { Authorization: \"Bearer \" + _this.bearerToken };\n            requestOptions.headers = extend(true, {}, requestOptions.headers, authHeader);\n            resolve();\n        });\n    };\n    return BearerTokenAuthenticator;\n}(authenticator_1.Authenticator));\nexports.BearerTokenAuthenticator = BearerTokenAuthenticator;\n"]},"metadata":{},"sourceType":"script"}