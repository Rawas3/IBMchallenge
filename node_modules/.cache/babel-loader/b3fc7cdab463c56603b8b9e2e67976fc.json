{"ast":null,"code":"var _jsxFileName = \"D:\\\\2.Programavimas\\\\Projects\\\\JAVA\\\\IdeaProject\\\\IBMchallenge\\\\src\\\\components\\\\WatsonNLU\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport NaturalLanguageUnderstandingV1 from 'ibm-watson/natural-language-understanding/v1';\nimport { IamAuthenticator } from 'ibm-watson/auth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction WatsonNLU() {\n  _s();\n\n  const apikey = process.env.REACT_APP_NLU_APIKEY;\n  console.log(apikey);\n  const [text, setText] = useState('');\n  const [sentiment, setSentiment] = useState('');\n  const [keywords, setKeywords] = useState('');\n  const [concepts, setConcepts] = useState('');\n  const [language, setLanguage] = useState('');\n  const nlu = new NaturalLanguageUnderstandingV1({\n    authenticator: new IamAuthenticator(apikey),\n    version: '2018-04-05',\n    url: \"https://api.au-syd.natural-language-understanding.watson.cloud.ibm.com/instances/7060c532-c183-48fa-b727-b896664469b8\"\n  });\n\n  function nluText() {\n    let keywords = '';\n    let concepts = '';\n    nlu.analyze({\n      html: text,\n      features: {\n        concepts: {},\n        sentiment: {},\n        keywords: {}\n      }\n    }).then(response => {\n      setSentiment(JSON.stringify(response.result.sentiment.document.label, null, 2));\n      setLanguage(JSON.stringify(response.result.language, null, 2));\n      response.result.keywords.map(keyword => {\n        keywords += keyword.text + \"; \";\n      });\n      setKeywords(JSON.stringify(keywords, null, 2));\n      response.result.concepts.map(concept => {\n        concepts += concept.text + \"; \";\n      });\n      setConcepts(JSON.stringify(concepts, null, 2));\n      console.log(JSON.stringify(response.result, null, 2));\n    }).catch(err => {\n      console.log('error: ', err);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"formItem\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Text:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            onChange: e => setText(e.target.value),\n            cols: \"30\",\n            rows: \"5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: nluText,\n          className: \"buttonSubmit\",\n          children: \"Go!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"result\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Sentiment: \", sentiment, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Language: \", language, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Keywords: \", keywords, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Concepts: \", concepts, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n}\n\n_s(WatsonNLU, \"ATFQJobM6BXWVBQUW5y+rA1R7CY=\");\n\n_c = WatsonNLU;\nexport default WatsonNLU;\n\nvar _c;\n\n$RefreshReg$(_c, \"WatsonNLU\");","map":{"version":3,"sources":["D:/2.Programavimas/Projects/JAVA/IdeaProject/IBMchallenge/src/components/WatsonNLU/index.js"],"names":["React","useState","NaturalLanguageUnderstandingV1","IamAuthenticator","WatsonNLU","apikey","process","env","REACT_APP_NLU_APIKEY","console","log","text","setText","sentiment","setSentiment","keywords","setKeywords","concepts","setConcepts","language","setLanguage","nlu","authenticator","version","url","nluText","analyze","html","features","then","response","JSON","stringify","result","document","label","map","keyword","concept","catch","err","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport NaturalLanguageUnderstandingV1 from 'ibm-watson/natural-language-understanding/v1';\r\nimport { IamAuthenticator } from 'ibm-watson/auth';\r\n\r\n\r\n\r\nfunction WatsonNLU(){\r\nconst apikey = process.env.REACT_APP_NLU_APIKEY\r\nconsole.log(apikey)\r\n\r\n    const [text, setText] = useState('');\r\n    const [sentiment, setSentiment] = useState('');\r\n    const [keywords, setKeywords] = useState('');\r\n    const [concepts, setConcepts] = useState('');\r\n    const [language, setLanguage] = useState('');\r\n\r\n    const nlu = new NaturalLanguageUnderstandingV1({\r\n        authenticator: new IamAuthenticator(apikey),\r\n        version: '2018-04-05',\r\n        url: \"https://api.au-syd.natural-language-understanding.watson.cloud.ibm.com/instances/7060c532-c183-48fa-b727-b896664469b8\"\r\n    });\r\n\r\n    function nluText(){\r\n        let keywords = '';\r\n        let concepts = '';\r\n        nlu.analyze(\r\n            {\r\n              html: text,\r\n              features: {\r\n                concepts: {},\r\n                sentiment: {},\r\n                keywords: {}\r\n              }\r\n            })\r\n            .then(response => {\r\n                setSentiment(JSON.stringify(response.result.sentiment.document.label, null, 2));\r\n                setLanguage(JSON.stringify(response.result.language, null, 2));\r\n                response.result.keywords.map(keyword => {\r\n                    keywords += keyword.text+\"; \";\r\n                });\r\n                setKeywords(JSON.stringify(keywords, null, 2));\r\n                response.result.concepts.map(concept => {\r\n                    concepts += concept.text+\"; \";\r\n                });\r\n                setConcepts(JSON.stringify(concepts, null, 2));\r\n                console.log(JSON.stringify(response.result, null, 2));\r\n            })\r\n            .catch(err => {\r\n              console.log('error: ', err);\r\n            });\r\n    }\r\n\r\n    return(\r\n        <div className=\"container\">\r\n            <main>\r\n                <div className=\"form\">\r\n                    <div className=\"formItem\">\r\n                        <label>Text:</label>\r\n                        <textarea onChange={e => setText(e.target.value)} cols=\"30\" rows=\"5\" />\r\n                    </div>\r\n                    <button type=\"button\" onClick={nluText} className=\"buttonSubmit\">\r\n                        Go!\r\n                    </button>\r\n                </div>\r\n                <div className=\"result\">\r\n                    <label>Sentiment: {sentiment} </label>\r\n                    <label>Language: {language} </label>\r\n                    <label>Keywords: {keywords} </label>\r\n                    <label>Concepts: {concepts} </label>\r\n                </div>\r\n            </main>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default WatsonNLU;\r\n\r\n"]},"metadata":{},"sourceType":"module"}