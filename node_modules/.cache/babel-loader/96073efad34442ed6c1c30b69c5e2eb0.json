{"ast":null,"code":"var _jsxFileName = \"D:\\\\2.Programavimas\\\\Projects\\\\JAVA\\\\IdeaProject\\\\IBMchallenge\\\\src\\\\components\\\\Giphy.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Giphy = () => {\n  _s();\n\n  const [search, setSearch] = useState('');\n  const [results, setResults] = useState([]);\n  const [loading, setLoading] = useState(false);\n  /*const handleInput = (e) => {\r\n      setSearch(e.target.value)\r\n    }\r\n    const handleSubmit = (e) => {\r\n      if(text.length === 0) {\r\n          //set error state to true\r\n        setLoading(true)\r\n        return\r\n      }\r\n        console.log(search)\r\n        const apiCall = async () => {\r\n        const res = await giphy.animate(search, {limit: 20})\r\n          setResults(res.data)\r\n      }\r\n        apiCall()\r\n      //change error state back to false\r\n      setText('')\r\n      setErr(false)\r\n      }*/\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Animated Text Generator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Type text into the form and hit submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 15\n    }, this), \"/*\", /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"input-field\",\n      placeholder: \"Search Gifs\",\n      value: search,\n      onChange: handleInput\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }, this), \"*/ /* \", /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"submit-btn\",\n      onClick: handleSubmit,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }, this), \"*/ /*\", /*#__PURE__*/_jsxDEV(Error, {\n      isError: err,\n      text: \"need length longer than 0 for input\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }, this), results && /*#__PURE__*/_jsxDEV(TextList, {\n      gifs: results\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 27\n    }, this), \"*/\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Giphy, \"6EtuFCTanIvfUj9dF9AoYpAoS4k=\");\n\n_c = Giphy;\nexport default Giphy;\n\nvar _c;\n\n$RefreshReg$(_c, \"Giphy\");","map":{"version":3,"sources":["D:/2.Programavimas/Projects/JAVA/IdeaProject/IBMchallenge/src/components/Giphy.js"],"names":["React","useState","Giphy","search","setSearch","results","setResults","loading","setLoading","handleInput","handleSubmit","err"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,QAAR,QAAuB,OAAvB;;;AAGA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAElB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBH,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACI,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACM,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,KAAD,CAAtC;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AASI,sBACI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BAEM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFN,eAGM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHN,qBAKQ;AAAO,MAAA,SAAS,EAAC,aAAjB;AACF,MAAA,WAAW,EAAC,aADV;AAEF,MAAA,KAAK,EAAEE,MAFL;AAGF,MAAA,QAAQ,EAAEM;AAHR;AAAA;AAAA;AAAA;AAAA,YALR,yBAUQ;AAAQ,MAAA,SAAS,EAAC,YAAlB;AAA+B,MAAA,OAAO,EAAEC,YAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAVR,wBAWQ,QAAC,KAAD;AAAO,MAAA,OAAO,EAAEC,GAAhB;AAAqB,MAAA,IAAI,EAAC;AAA1B;AAAA;AAAA;AAAA;AAAA,YAXR,EAYON,OAAO,iBAAI,QAAC,QAAD;AAAU,MAAA,IAAI,EAAEA;AAAhB;AAAA;AAAA;AAAA;AAAA,YAZlB;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAgBH,CAjDD;;GAAMH,K;;KAAAA,K;AAmDN,eAAeA,KAAf","sourcesContent":["import React from 'react';\r\nimport {useState} from 'react';\r\n\r\n\r\nconst Giphy = () => {\r\n\r\n  const [search, setSearch] = useState('')\r\n  const [results, setResults] = useState([])\r\n  const [loading, setLoading] = useState(false)\r\n\r\n  /*const handleInput = (e) => {\r\n      setSearch(e.target.value)\r\n    }\r\n\r\n  const handleSubmit = (e) => {\r\n      if(text.length === 0) {\r\n\r\n        //set error state to true\r\n        setLoading(true)\r\n        return\r\n      }\r\n\r\n      console.log(search)\r\n\r\n      const apiCall = async () => {\r\n        const res = await giphy.animate(search, {limit: 20})\r\n\r\n        setResults(res.data)\r\n      }\r\n\r\n      apiCall()\r\n      //change error state back to false\r\n      setText('')\r\n      setErr(false)\r\n\r\n    }*/\r\n\r\n    return (\r\n        <div className=\"App\">\r\n\r\n              <h1>Animated Text Generator</h1>\r\n              <h3>Type text into the form and hit submit</h3>\r\n\r\n              /*<input className='input-field'\r\n              placeholder=\"Search Gifs\"\r\n              value={search}\r\n              onChange={handleInput} />*/\r\n\r\n             /* <button className='submit-btn' onClick={handleSubmit}>Submit</button>*/\r\n              /*<Error isError={err} text='need length longer than 0 for input'/>\r\n              {results && <TextList gifs={results}  />}*/\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Giphy"]},"metadata":{},"sourceType":"module"}