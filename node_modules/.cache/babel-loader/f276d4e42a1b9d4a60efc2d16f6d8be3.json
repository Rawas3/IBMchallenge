{"ast":null,"code":"var _jsxFileName = \"D:\\\\2.Programavimas\\\\Projects\\\\JAVA\\\\IdeaProject\\\\IBMchallenge\\\\src\\\\components\\\\WatsonNLU\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport NaturalLanguageUnderstandingV1 from 'ibm-watson/natural-language-understanding/v1';\nimport { IamAuthenticator } from 'ibm-watson/auth';\nimport { NLUCredentials } from \"../../components/Credentials\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction WatsonNLU() {\n  _s();\n\n  const [text, setText] = useState('');\n  const [keywords, setKeywords] = useState('');\n  const nlu = new NaturalLanguageUnderstandingV1({\n    authenticator: new IamAuthenticator({\n      apikey: NLUCredentials.apikey\n    }),\n    version: '2022-04-07',\n    serviceUrl: \"https://api.us-south.natural-language-understanding.watson.cloud.ibm.com\"\n  });\n\n  function nluText() {\n    let keywords = '';\n    nlu.analyze({\n      html: text,\n      features: {\n        keywords: {}\n      }\n    }).then(response => {\n      response.result.keywords.map(keyword => {\n        keywords += keyword.text + \"; \";\n      });\n      setKeywords(JSON.stringify(keywords, null, 2));\n      console.log(JSON.stringify(response.result, null, 2));\n    }).catch(err => {\n      console.log('error: ', err);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"formItem\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Text:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            onChange: e => setText(e.target.value),\n            cols: \"28\",\n            rows: \"5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: nluText,\n          className: \"buttonSubmit\",\n          children: \"Go!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"result\",\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Keywords: \", keywords, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n}\n\n_s(WatsonNLU, \"JqWHEdbLnyqiSHMEgh8niHe8QXM=\");\n\n_c = WatsonNLU;\nexport default WatsonNLU;\n\nvar _c;\n\n$RefreshReg$(_c, \"WatsonNLU\");","map":{"version":3,"sources":["D:/2.Programavimas/Projects/JAVA/IdeaProject/IBMchallenge/src/components/WatsonNLU/index.js"],"names":["React","useState","NaturalLanguageUnderstandingV1","IamAuthenticator","NLUCredentials","WatsonNLU","text","setText","keywords","setKeywords","nlu","authenticator","apikey","version","serviceUrl","nluText","analyze","html","features","then","response","result","map","keyword","JSON","stringify","console","log","catch","err","e","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,8BAAP,MAA2C,8CAA3C;AACA,SAASC,gBAAT,QAAiC,iBAAjC;AACA,SAASC,cAAT,QAA+B,8BAA/B;;;AAEA,SAASC,SAAT,GAAoB;AAAA;;AAEhB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACO,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,EAAD,CAAxC;AAEA,QAAMS,GAAG,GAAG,IAAIR,8BAAJ,CAAmC;AAC3CS,IAAAA,aAAa,EAAE,IAAIR,gBAAJ,CAAqB;AAAES,MAAAA,MAAM,EAAER,cAAc,CAACQ;AAAzB,KAArB,CAD4B;AAE3CC,IAAAA,OAAO,EAAE,YAFkC;AAG3CC,IAAAA,UAAU,EAAE;AAH+B,GAAnC,CAAZ;;AAMA,WAASC,OAAT,GAAkB;AACd,QAAIP,QAAQ,GAAG,EAAf;AACAE,IAAAA,GAAG,CAACM,OAAJ,CACI;AACEC,MAAAA,IAAI,EAAEX,IADR;AAEEY,MAAAA,QAAQ,EAAE;AACRV,QAAAA,QAAQ,EAAE;AADF;AAFZ,KADJ,EAOKW,IAPL,CAOUC,QAAQ,IAAI;AACdA,MAAAA,QAAQ,CAACC,MAAT,CAAgBb,QAAhB,CAAyBc,GAAzB,CAA6BC,OAAO,IAAI;AACpCf,QAAAA,QAAQ,IAAIe,OAAO,CAACjB,IAAR,GAAa,IAAzB;AACH,OAFD;AAGAG,MAAAA,WAAW,CAACe,IAAI,CAACC,SAAL,CAAejB,QAAf,EAAyB,IAAzB,EAA+B,CAA/B,CAAD,CAAX;AACAkB,MAAAA,OAAO,CAACC,GAAR,CAAYH,IAAI,CAACC,SAAL,CAAeL,QAAQ,CAACC,MAAxB,EAAgC,IAAhC,EAAsC,CAAtC,CAAZ;AACH,KAbL,EAcKO,KAdL,CAcWC,GAAG,IAAI;AACZH,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBE,GAAvB;AACD,KAhBL;AAiBH;;AAED,sBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,2BACI;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,gCACI;AAAK,UAAA,SAAS,EAAC,UAAf;AAAA,kCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAU,YAAA,QAAQ,EAAEC,CAAC,IAAIvB,OAAO,CAACuB,CAAC,CAACC,MAAF,CAASC,KAAV,CAAhC;AAAkD,YAAA,IAAI,EAAC,IAAvD;AAA4D,YAAA,IAAI,EAAC;AAAjE;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAKI;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAsB,UAAA,OAAO,EAAEjB,OAA/B;AAAwC,UAAA,SAAS,EAAC,cAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAUI;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA,+BACI;AAAA,mCAAkBP,QAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAVJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAmBH;;GAnDQH,S;;KAAAA,S;AAqDT,eAAeA,SAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport NaturalLanguageUnderstandingV1 from 'ibm-watson/natural-language-understanding/v1';\r\nimport { IamAuthenticator } from 'ibm-watson/auth';\r\nimport { NLUCredentials } from \"../../components/Credentials\";\r\n\r\nfunction WatsonNLU(){\r\n\r\n    const [text, setText] = useState('');\r\n    const [keywords, setKeywords] = useState('');\r\n\r\n    const nlu = new NaturalLanguageUnderstandingV1({\r\n        authenticator: new IamAuthenticator({ apikey: NLUCredentials.apikey}),\r\n        version: '2022-04-07',\r\n        serviceUrl: \"https://api.us-south.natural-language-understanding.watson.cloud.ibm.com\",\r\n    });\r\n\r\n    function nluText(){\r\n        let keywords = '';\r\n        nlu.analyze(\r\n            {\r\n              html: text,\r\n              features: {\r\n                keywords: {}\r\n              }\r\n            })\r\n            .then(response => {\r\n                response.result.keywords.map(keyword => {\r\n                    keywords += keyword.text+\"; \";\r\n                });\r\n                setKeywords(JSON.stringify(keywords, null, 2));\r\n                console.log(JSON.stringify(response.result, null, 2));\r\n            })\r\n            .catch(err => {\r\n              console.log('error: ', err);\r\n            });\r\n    }\r\n\r\n    return(\r\n        <div className=\"container\">\r\n            <main>\r\n                <div className=\"form\">\r\n                    <div className=\"formItem\">\r\n                        <label>Text:</label>\r\n                        <textarea onChange={e => setText(e.target.value)} cols=\"28\" rows=\"5\" />\r\n                    </div>\r\n                    <button type=\"button\" onClick={nluText} className=\"buttonSubmit\">\r\n                        Go!\r\n                    </button>\r\n                </div>\r\n                <div className=\"result\">\r\n                    <label>Keywords: {keywords} </label>\r\n                </div>\r\n            </main>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default WatsonNLU;\r\n\r\n"]},"metadata":{},"sourceType":"module"}