{"ast":null,"code":"\"use strict\";\n/**\n * (C) Copyright IBM Corp. 2017, 2020.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar extend = require(\"extend\");\n\nvar ibm_cloud_sdk_core_1 = require(\"ibm-cloud-sdk-core\");\n\nvar common_1 = require(\"../lib/common\");\n/**\n * Analyze various features of text content at scale. Provide text, raw HTML, or a public URL and IBM Watson Natural\n * Language Understanding will give you results for the features you request. The service cleans HTML content before\n * analysis by default, so the results can ignore most advertisements and other unwanted content.\n *\n * You can create [custom\n * models](https://cloud.ibm.com/docs/natural-language-understanding?topic=natural-language-understanding-customizing)\n * with Watson Knowledge Studio to detect custom entities and relations in Natural Language Understanding.\n */\n\n\nvar NaturalLanguageUnderstandingV1 =\n/** @class */\nfunction (_super) {\n  __extends(NaturalLanguageUnderstandingV1, _super);\n  /**\n   * Construct a NaturalLanguageUnderstandingV1 object.\n   *\n   * @param {Object} options - Options for the service.\n   * @param {string} options.version - The API version date to use with the service, in \"YYYY-MM-DD\" format. Whenever\n   * the API is changed in a backwards incompatible way, a new minor version of the API is released. The service uses\n   * the API version for the date you specify, or the most recent version before that date. Note that you should not\n   * programmatically specify the current date at runtime, in case the API has been updated since your application's\n   * release. Instead, specify a version date that is compatible with your application, and don't change it until your\n   * application is ready for a later version.\n   * @param {string} [options.serviceUrl] - The base url to use when contacting the service. The base url may differ between IBM Cloud regions.\n   * @param {OutgoingHttpHeaders} [options.headers] - Default headers that shall be included with every request to the service.\n   * @param {string} [options.serviceName] - The name of the service to configure\n   * @param {Authenticator} [options.authenticator] - The Authenticator object used to authenticate requests to the service. Defaults to environment if not set\n   * @constructor\n   * @returns {NaturalLanguageUnderstandingV1}\n   * @throws {Error}\n   */\n\n\n  function NaturalLanguageUnderstandingV1(options) {\n    var _this = this;\n\n    if (!options.serviceName) {\n      options.serviceName = NaturalLanguageUnderstandingV1.DEFAULT_SERVICE_NAME;\n    } // If the caller didn't supply an authenticator, construct one from external configuration.\n\n\n    if (!options.authenticator) {\n      options.authenticator = ibm_cloud_sdk_core_1.getAuthenticatorFromEnvironment(options.serviceName);\n    }\n\n    _this = _super.call(this, options) || this;\n\n    _this.configureService(options.serviceName);\n\n    if (options.serviceUrl) {\n      _this.setServiceUrl(options.serviceUrl);\n    } // check if 'version' was provided\n\n\n    if (typeof _this.baseOptions.version === 'undefined') {\n      throw new Error('Argument error: version was not specified');\n    }\n\n    _this.baseOptions.qs.version = options.version;\n    return _this;\n  }\n  /*************************\n   * analyze\n   ************************/\n\n  /**\n   * Analyze text.\n   *\n   * Analyzes text, HTML, or a public webpage for the following features:\n   * - Categories\n   * - Concepts\n   * - Emotion\n   * - Entities\n   * - Keywords\n   * - Metadata\n   * - Relations\n   * - Semantic roles\n   * - Sentiment\n   * - Syntax.\n   *\n   * If a language for the input text is not specified with the `language` parameter, the service [automatically detects\n   * the\n   * language](https://cloud.ibm.com/docs/natural-language-understanding?topic=natural-language-understanding-detectable-languages).\n   *\n   * @param {Object} params - The parameters to send to the service.\n   * @param {Features} params.features - Specific features to analyze the document for.\n   * @param {string} [params.text] - The plain text to analyze. One of the `text`, `html`, or `url` parameters is\n   * required.\n   * @param {string} [params.html] - The HTML file to analyze. One of the `text`, `html`, or `url` parameters is\n   * required.\n   * @param {string} [params.url] - The webpage to analyze. One of the `text`, `html`, or `url` parameters is required.\n   * @param {boolean} [params.clean] - Set this to `false` to disable webpage cleaning. For more information about\n   * webpage cleaning, see [Analyzing\n   * webpages](https://cloud.ibm.com/docs/natural-language-understanding?topic=natural-language-understanding-analyzing-webpages).\n   * @param {string} [params.xpath] - An [XPath\n   * query](https://cloud.ibm.com/docs/natural-language-understanding?topic=natural-language-understanding-analyzing-webpages#xpath)\n   * to perform on `html` or `url` input. Results of the query will be appended to the cleaned webpage text before it is\n   * analyzed. To analyze only the results of the XPath query, set the `clean` parameter to `false`.\n   * @param {boolean} [params.fallbackToRaw] - Whether to use raw HTML content if text cleaning fails.\n   * @param {boolean} [params.returnAnalyzedText] - Whether or not to return the analyzed text.\n   * @param {string} [params.language] - ISO 639-1 code that specifies the language of your text. This overrides\n   * automatic language detection. Language support differs depending on the features you include in your analysis. For\n   * more information, see [Language\n   * support](https://cloud.ibm.com/docs/natural-language-understanding?topic=natural-language-understanding-language-support).\n   * @param {number} [params.limitTextCharacters] - Sets the maximum number of characters that are processed by the\n   * service.\n   * @param {OutgoingHttpHeaders} [params.headers] - Custom request headers\n   * @param {Function} [callback] - The callback that handles the response\n   * @returns {Promise<NaturalLanguageUnderstandingV1.Response<NaturalLanguageUnderstandingV1.AnalysisResults>>}\n   */\n\n\n  NaturalLanguageUnderstandingV1.prototype.analyze = function (params, callback) {\n    var _this = this;\n\n    var _params = extend({}, params);\n\n    var _callback = callback;\n    var requiredParams = ['features'];\n    return new Promise(function (resolve, reject) {\n      var missingParams = ibm_cloud_sdk_core_1.getMissingParams(_params, requiredParams);\n\n      if (missingParams) {\n        if (_callback) {\n          _callback(missingParams);\n\n          return resolve();\n        }\n\n        return reject(missingParams);\n      }\n\n      var body = {\n        'features': _params.features,\n        'text': _params.text,\n        'html': _params.html,\n        'url': _params.url,\n        'clean': _params.clean,\n        'xpath': _params.xpath,\n        'fallback_to_raw': _params.fallbackToRaw,\n        'return_analyzed_text': _params.returnAnalyzedText,\n        'language': _params.language,\n        'limit_text_characters': _params.limitTextCharacters\n      };\n      var sdkHeaders = common_1.getSdkHeaders(NaturalLanguageUnderstandingV1.DEFAULT_SERVICE_NAME, 'v1', 'analyze');\n      var parameters = {\n        options: {\n          url: '/v1/analyze',\n          method: 'POST',\n          body: body\n        },\n        defaultOptions: extend(true, {}, _this.baseOptions, {\n          headers: extend(true, sdkHeaders, {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n          }, _params.headers)\n        })\n      };\n      return _this.createRequest(parameters).then(function (res) {\n        if (_callback) {\n          _callback(null, res);\n        }\n\n        return resolve(res);\n      }, function (err) {\n        if (_callback) {\n          _callback(err);\n\n          return resolve();\n        }\n\n        return reject(err);\n      });\n    });\n  };\n\n  ;\n  /*************************\n   * manageModels\n   ************************/\n\n  /**\n   * List models.\n   *\n   * Lists Watson Knowledge Studio [custom entities and relations\n   * models](https://cloud.ibm.com/docs/natural-language-understanding?topic=natural-language-understanding-customizing)\n   * that are deployed to your Natural Language Understanding service.\n   *\n   * @param {Object} [params] - The parameters to send to the service.\n   * @param {OutgoingHttpHeaders} [params.headers] - Custom request headers\n   * @param {Function} [callback] - The callback that handles the response\n   * @returns {Promise<NaturalLanguageUnderstandingV1.Response<NaturalLanguageUnderstandingV1.ListModelsResults>>}\n   */\n\n  NaturalLanguageUnderstandingV1.prototype.listModels = function (params, callback) {\n    var _this = this;\n\n    var _params = typeof params === 'function' && !callback ? {} : extend({}, params);\n\n    var _callback = typeof params === 'function' && !callback ? params : callback;\n\n    return new Promise(function (resolve, reject) {\n      var sdkHeaders = common_1.getSdkHeaders(NaturalLanguageUnderstandingV1.DEFAULT_SERVICE_NAME, 'v1', 'listModels');\n      var parameters = {\n        options: {\n          url: '/v1/models',\n          method: 'GET'\n        },\n        defaultOptions: extend(true, {}, _this.baseOptions, {\n          headers: extend(true, sdkHeaders, {\n            'Accept': 'application/json'\n          }, _params.headers)\n        })\n      };\n      return _this.createRequest(parameters).then(function (res) {\n        if (_callback) {\n          _callback(null, res);\n        }\n\n        return resolve(res);\n      }, function (err) {\n        if (_callback) {\n          _callback(err);\n\n          return resolve();\n        }\n\n        return reject(err);\n      });\n    });\n  };\n\n  ;\n  /**\n   * Delete model.\n   *\n   * Deletes a custom model.\n   *\n   * @param {Object} params - The parameters to send to the service.\n   * @param {string} params.modelId - Model ID of the model to delete.\n   * @param {OutgoingHttpHeaders} [params.headers] - Custom request headers\n   * @param {Function} [callback] - The callback that handles the response\n   * @returns {Promise<NaturalLanguageUnderstandingV1.Response<NaturalLanguageUnderstandingV1.DeleteModelResults>>}\n   */\n\n  NaturalLanguageUnderstandingV1.prototype.deleteModel = function (params, callback) {\n    var _this = this;\n\n    var _params = extend({}, params);\n\n    var _callback = callback;\n    var requiredParams = ['modelId'];\n    return new Promise(function (resolve, reject) {\n      var missingParams = ibm_cloud_sdk_core_1.getMissingParams(_params, requiredParams);\n\n      if (missingParams) {\n        if (_callback) {\n          _callback(missingParams);\n\n          return resolve();\n        }\n\n        return reject(missingParams);\n      }\n\n      var path = {\n        'model_id': _params.modelId\n      };\n      var sdkHeaders = common_1.getSdkHeaders(NaturalLanguageUnderstandingV1.DEFAULT_SERVICE_NAME, 'v1', 'deleteModel');\n      var parameters = {\n        options: {\n          url: '/v1/models/{model_id}',\n          method: 'DELETE',\n          path: path\n        },\n        defaultOptions: extend(true, {}, _this.baseOptions, {\n          headers: extend(true, sdkHeaders, {\n            'Accept': 'application/json'\n          }, _params.headers)\n        })\n      };\n      return _this.createRequest(parameters).then(function (res) {\n        if (_callback) {\n          _callback(null, res);\n        }\n\n        return resolve(res);\n      }, function (err) {\n        if (_callback) {\n          _callback(err);\n\n          return resolve();\n        }\n\n        return reject(err);\n      });\n    });\n  };\n\n  ;\n  NaturalLanguageUnderstandingV1.DEFAULT_SERVICE_URL = 'https://api.us-south.natural-language-understanding.watson.cloud.ibm.com';\n  NaturalLanguageUnderstandingV1.DEFAULT_SERVICE_NAME = 'natural-language-understanding';\n  return NaturalLanguageUnderstandingV1;\n}(ibm_cloud_sdk_core_1.BaseService);\n\nmodule.exports = NaturalLanguageUnderstandingV1;","map":{"version":3,"sources":["D:/2.Programavimas/Projects/JAVA/IdeaProject/IBMchallenge/node_modules/ibm-watson/natural-language-understanding/v1.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","extend","require","ibm_cloud_sdk_core_1","common_1","NaturalLanguageUnderstandingV1","_super","options","_this","serviceName","DEFAULT_SERVICE_NAME","authenticator","getAuthenticatorFromEnvironment","call","configureService","serviceUrl","setServiceUrl","baseOptions","version","Error","qs","analyze","params","callback","_params","_callback","requiredParams","Promise","resolve","reject","missingParams","getMissingParams","body","features","text","html","url","clean","xpath","fallbackToRaw","returnAnalyzedText","language","limitTextCharacters","sdkHeaders","getSdkHeaders","parameters","method","defaultOptions","headers","createRequest","then","res","err","listModels","deleteModel","path","modelId","DEFAULT_SERVICE_URL","BaseService","module","exports"],"mappings":"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","sourcesContent":["\"use strict\";\n/**\n * (C) Copyright IBM Corp. 2017, 2020.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar extend = require(\"extend\");\nvar ibm_cloud_sdk_core_1 = require(\"ibm-cloud-sdk-core\");\nvar common_1 = require(\"../lib/common\");\n/**\n * Analyze various features of text content at scale. Provide text, raw HTML, or a public URL and IBM Watson Natural\n * Language Understanding will give you results for the features you request. The service cleans HTML content before\n * analysis by default, so the results can ignore most advertisements and other unwanted content.\n *\n * You can create [custom\n * models](https://cloud.ibm.com/docs/natural-language-understanding?topic=natural-language-understanding-customizing)\n * with Watson Knowledge Studio to detect custom entities and relations in Natural Language Understanding.\n */\nvar NaturalLanguageUnderstandingV1 = /** @class */ (function (_super) {\n    __extends(NaturalLanguageUnderstandingV1, _super);\n    /**\n     * Construct a NaturalLanguageUnderstandingV1 object.\n     *\n     * @param {Object} options - Options for the service.\n     * @param {string} options.version - The API version date to use with the service, in \"YYYY-MM-DD\" format. Whenever\n     * the API is changed in a backwards incompatible way, a new minor version of the API is released. The service uses\n     * the API version for the date you specify, or the most recent version before that date. Note that you should not\n     * programmatically specify the current date at runtime, in case the API has been updated since your application's\n     * release. Instead, specify a version date that is compatible with your application, and don't change it until your\n     * application is ready for a later version.\n     * @param {string} [options.serviceUrl] - The base url to use when contacting the service. The base url may differ between IBM Cloud regions.\n     * @param {OutgoingHttpHeaders} [options.headers] - Default headers that shall be included with every request to the service.\n     * @param {string} [options.serviceName] - The name of the service to configure\n     * @param {Authenticator} [options.authenticator] - The Authenticator object used to authenticate requests to the service. Defaults to environment if not set\n     * @constructor\n     * @returns {NaturalLanguageUnderstandingV1}\n     * @throws {Error}\n     */\n    function NaturalLanguageUnderstandingV1(options) {\n        var _this = this;\n        if (!options.serviceName) {\n            options.serviceName = NaturalLanguageUnderstandingV1.DEFAULT_SERVICE_NAME;\n        }\n        // If the caller didn't supply an authenticator, construct one from external configuration.\n        if (!options.authenticator) {\n            options.authenticator = ibm_cloud_sdk_core_1.getAuthenticatorFromEnvironment(options.serviceName);\n        }\n        _this = _super.call(this, options) || this;\n        _this.configureService(options.serviceName);\n        if (options.serviceUrl) {\n            _this.setServiceUrl(options.serviceUrl);\n        }\n        // check if 'version' was provided\n        if (typeof _this.baseOptions.version === 'undefined') {\n            throw new Error('Argument error: version was not specified');\n        }\n        _this.baseOptions.qs.version = options.version;\n        return _this;\n    }\n    /*************************\n     * analyze\n     ************************/\n    /**\n     * Analyze text.\n     *\n     * Analyzes text, HTML, or a public webpage for the following features:\n     * - Categories\n     * - Concepts\n     * - Emotion\n     * - Entities\n     * - Keywords\n     * - Metadata\n     * - Relations\n     * - Semantic roles\n     * - Sentiment\n     * - Syntax.\n     *\n     * If a language for the input text is not specified with the `language` parameter, the service [automatically detects\n     * the\n     * language](https://cloud.ibm.com/docs/natural-language-understanding?topic=natural-language-understanding-detectable-languages).\n     *\n     * @param {Object} params - The parameters to send to the service.\n     * @param {Features} params.features - Specific features to analyze the document for.\n     * @param {string} [params.text] - The plain text to analyze. One of the `text`, `html`, or `url` parameters is\n     * required.\n     * @param {string} [params.html] - The HTML file to analyze. One of the `text`, `html`, or `url` parameters is\n     * required.\n     * @param {string} [params.url] - The webpage to analyze. One of the `text`, `html`, or `url` parameters is required.\n     * @param {boolean} [params.clean] - Set this to `false` to disable webpage cleaning. For more information about\n     * webpage cleaning, see [Analyzing\n     * webpages](https://cloud.ibm.com/docs/natural-language-understanding?topic=natural-language-understanding-analyzing-webpages).\n     * @param {string} [params.xpath] - An [XPath\n     * query](https://cloud.ibm.com/docs/natural-language-understanding?topic=natural-language-understanding-analyzing-webpages#xpath)\n     * to perform on `html` or `url` input. Results of the query will be appended to the cleaned webpage text before it is\n     * analyzed. To analyze only the results of the XPath query, set the `clean` parameter to `false`.\n     * @param {boolean} [params.fallbackToRaw] - Whether to use raw HTML content if text cleaning fails.\n     * @param {boolean} [params.returnAnalyzedText] - Whether or not to return the analyzed text.\n     * @param {string} [params.language] - ISO 639-1 code that specifies the language of your text. This overrides\n     * automatic language detection. Language support differs depending on the features you include in your analysis. For\n     * more information, see [Language\n     * support](https://cloud.ibm.com/docs/natural-language-understanding?topic=natural-language-understanding-language-support).\n     * @param {number} [params.limitTextCharacters] - Sets the maximum number of characters that are processed by the\n     * service.\n     * @param {OutgoingHttpHeaders} [params.headers] - Custom request headers\n     * @param {Function} [callback] - The callback that handles the response\n     * @returns {Promise<NaturalLanguageUnderstandingV1.Response<NaturalLanguageUnderstandingV1.AnalysisResults>>}\n     */\n    NaturalLanguageUnderstandingV1.prototype.analyze = function (params, callback) {\n        var _this = this;\n        var _params = extend({}, params);\n        var _callback = callback;\n        var requiredParams = ['features'];\n        return new Promise(function (resolve, reject) {\n            var missingParams = ibm_cloud_sdk_core_1.getMissingParams(_params, requiredParams);\n            if (missingParams) {\n                if (_callback) {\n                    _callback(missingParams);\n                    return resolve();\n                }\n                return reject(missingParams);\n            }\n            var body = {\n                'features': _params.features,\n                'text': _params.text,\n                'html': _params.html,\n                'url': _params.url,\n                'clean': _params.clean,\n                'xpath': _params.xpath,\n                'fallback_to_raw': _params.fallbackToRaw,\n                'return_analyzed_text': _params.returnAnalyzedText,\n                'language': _params.language,\n                'limit_text_characters': _params.limitTextCharacters\n            };\n            var sdkHeaders = common_1.getSdkHeaders(NaturalLanguageUnderstandingV1.DEFAULT_SERVICE_NAME, 'v1', 'analyze');\n            var parameters = {\n                options: {\n                    url: '/v1/analyze',\n                    method: 'POST',\n                    body: body,\n                },\n                defaultOptions: extend(true, {}, _this.baseOptions, {\n                    headers: extend(true, sdkHeaders, {\n                        'Accept': 'application/json',\n                        'Content-Type': 'application/json',\n                    }, _params.headers),\n                }),\n            };\n            return _this.createRequest(parameters).then(function (res) {\n                if (_callback) {\n                    _callback(null, res);\n                }\n                return resolve(res);\n            }, function (err) {\n                if (_callback) {\n                    _callback(err);\n                    return resolve();\n                }\n                return reject(err);\n            });\n        });\n    };\n    ;\n    /*************************\n     * manageModels\n     ************************/\n    /**\n     * List models.\n     *\n     * Lists Watson Knowledge Studio [custom entities and relations\n     * models](https://cloud.ibm.com/docs/natural-language-understanding?topic=natural-language-understanding-customizing)\n     * that are deployed to your Natural Language Understanding service.\n     *\n     * @param {Object} [params] - The parameters to send to the service.\n     * @param {OutgoingHttpHeaders} [params.headers] - Custom request headers\n     * @param {Function} [callback] - The callback that handles the response\n     * @returns {Promise<NaturalLanguageUnderstandingV1.Response<NaturalLanguageUnderstandingV1.ListModelsResults>>}\n     */\n    NaturalLanguageUnderstandingV1.prototype.listModels = function (params, callback) {\n        var _this = this;\n        var _params = (typeof params === 'function' && !callback) ? {} : extend({}, params);\n        var _callback = (typeof params === 'function' && !callback) ? params : callback;\n        return new Promise(function (resolve, reject) {\n            var sdkHeaders = common_1.getSdkHeaders(NaturalLanguageUnderstandingV1.DEFAULT_SERVICE_NAME, 'v1', 'listModels');\n            var parameters = {\n                options: {\n                    url: '/v1/models',\n                    method: 'GET',\n                },\n                defaultOptions: extend(true, {}, _this.baseOptions, {\n                    headers: extend(true, sdkHeaders, {\n                        'Accept': 'application/json',\n                    }, _params.headers),\n                }),\n            };\n            return _this.createRequest(parameters).then(function (res) {\n                if (_callback) {\n                    _callback(null, res);\n                }\n                return resolve(res);\n            }, function (err) {\n                if (_callback) {\n                    _callback(err);\n                    return resolve();\n                }\n                return reject(err);\n            });\n        });\n    };\n    ;\n    /**\n     * Delete model.\n     *\n     * Deletes a custom model.\n     *\n     * @param {Object} params - The parameters to send to the service.\n     * @param {string} params.modelId - Model ID of the model to delete.\n     * @param {OutgoingHttpHeaders} [params.headers] - Custom request headers\n     * @param {Function} [callback] - The callback that handles the response\n     * @returns {Promise<NaturalLanguageUnderstandingV1.Response<NaturalLanguageUnderstandingV1.DeleteModelResults>>}\n     */\n    NaturalLanguageUnderstandingV1.prototype.deleteModel = function (params, callback) {\n        var _this = this;\n        var _params = extend({}, params);\n        var _callback = callback;\n        var requiredParams = ['modelId'];\n        return new Promise(function (resolve, reject) {\n            var missingParams = ibm_cloud_sdk_core_1.getMissingParams(_params, requiredParams);\n            if (missingParams) {\n                if (_callback) {\n                    _callback(missingParams);\n                    return resolve();\n                }\n                return reject(missingParams);\n            }\n            var path = {\n                'model_id': _params.modelId\n            };\n            var sdkHeaders = common_1.getSdkHeaders(NaturalLanguageUnderstandingV1.DEFAULT_SERVICE_NAME, 'v1', 'deleteModel');\n            var parameters = {\n                options: {\n                    url: '/v1/models/{model_id}',\n                    method: 'DELETE',\n                    path: path,\n                },\n                defaultOptions: extend(true, {}, _this.baseOptions, {\n                    headers: extend(true, sdkHeaders, {\n                        'Accept': 'application/json',\n                    }, _params.headers),\n                }),\n            };\n            return _this.createRequest(parameters).then(function (res) {\n                if (_callback) {\n                    _callback(null, res);\n                }\n                return resolve(res);\n            }, function (err) {\n                if (_callback) {\n                    _callback(err);\n                    return resolve();\n                }\n                return reject(err);\n            });\n        });\n    };\n    ;\n    NaturalLanguageUnderstandingV1.DEFAULT_SERVICE_URL = 'https://api.us-south.natural-language-understanding.watson.cloud.ibm.com';\n    NaturalLanguageUnderstandingV1.DEFAULT_SERVICE_NAME = 'natural-language-understanding';\n    return NaturalLanguageUnderstandingV1;\n}(ibm_cloud_sdk_core_1.BaseService));\nmodule.exports = NaturalLanguageUnderstandingV1;\n"]},"metadata":{},"sourceType":"script"}