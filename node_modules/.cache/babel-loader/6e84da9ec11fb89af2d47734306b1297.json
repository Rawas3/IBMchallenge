{"ast":null,"code":"var _jsxFileName = \"D:\\\\2.Programavimas\\\\Projects\\\\JAVA\\\\IdeaProject\\\\IBMchallenge\\\\src\\\\components\\\\SearchForm\\\\SearchForm.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState } from 'react';\nimport { GiphyFetch } from '@giphy/js-fetch-api';\nimport { Container, Form, Section } from \"react-bootstrap\";\nimport Error from \"../ErrorForm/index.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst giphyURL = process.env.REACT_APP_GIPHY_URL;\n\nconst SearchForm = () => {\n  _s();\n\n  const [text, setText] = useState('');\n  const [results, setResults] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [err, setErr] = useState(false);\n\n  const handleInput = e => {\n    setText(e.target.value);\n  };\n\n  const handleSubmit = e => {\n    const url = giphyURL.concat(text);\n\n    if (text.length === 0) {\n      setErr(true);\n      return;\n    }\n\n    setLoading(true);\n    fetch(url).then(response => response.json()).then(content => {\n      console.log(content.data);\n      setResults(content.data.map(gif => {\n        return gif.images.fixed_height.url;\n      }));\n    }).catch(err => {\n      setLoading(false);\n      console.error(err);\n    });\n    console.log(text);\n    console.log(url); //change error state back to false\n\n    setText('');\n    setErr(false);\n    setLoading(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Section, {\n    className: \"search-form\",\n    children: [/*#__PURE__*/_jsxDEV(Form, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"input-field\",\n        placeholder: \"Search Gifs\",\n        value: text,\n        onChange: handleInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"submit-btn\",\n        onClick: handleSubmit,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Error, {\n      isError: err,\n      text: \"need length longer than 0 for input\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\" \", results.map((gif, index) => {\n        return /*#__PURE__*/_jsxDEV(\"img\", {\n          src: gif\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 25\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SearchForm, \"mIZtRaC7OmicTNpDuqH1g9EXmBc=\");\n\n_c = SearchForm;\nexport default SearchForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchForm\");","map":{"version":3,"sources":["D:/2.Programavimas/Projects/JAVA/IdeaProject/IBMchallenge/src/components/SearchForm/SearchForm.js"],"names":["React","useState","GiphyFetch","Container","Form","Section","Error","giphyURL","process","env","REACT_APP_GIPHY_URL","SearchForm","text","setText","results","setResults","loading","setLoading","err","setErr","handleInput","e","target","value","handleSubmit","url","concat","length","fetch","then","response","json","content","console","log","data","map","gif","images","fixed_height","catch","error","index"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {useState} from 'react';\r\nimport { GiphyFetch } from '@giphy/js-fetch-api';\r\nimport {Container, Form, Section} from \"react-bootstrap\";\r\nimport Error from \"../ErrorForm/index.js\";\r\n\r\n\r\nconst giphyURL = process.env.REACT_APP_GIPHY_URL\r\nconst SearchForm = () => {\r\n\r\n  const [text, setText] = useState('')\r\n  const [results, setResults] = useState([])\r\n  const [loading, setLoading] = useState(false)\r\n  const [err, setErr] = useState(false)\r\n\r\n  const handleInput = (e) => {\r\n      setText(e.target.value)\r\n    }\r\n\r\n  const handleSubmit = (e) => {\r\n     const url = giphyURL.concat(text)\r\n          if(text.length === 0) {\r\n          setErr(true)\r\n          return\r\n          }\r\n            setLoading(true);\r\n            fetch(url)\r\n                .then((response) => response.json())\r\n                .then((content) => {\r\n                console.log(content.data)\r\n                    setResults(content.data.map((gif) => {\r\n                        return gif.images.fixed_height.url;\r\n                        }))\r\n                })\r\n                .catch((err) => {\r\n                setLoading(false);\r\n                  console.error(err);\r\n                })\r\n\r\n\r\n      console.log(text)\r\n      console.log(url)\r\n\r\n      //change error state back to false\r\n      setText('')\r\n      setErr(false)\r\n      setLoading(false)\r\n    }\r\n\r\n    return (\r\n        <Section className=\"search-form\">\r\n            <Form>\r\n              <input className='input-field'\r\n                  placeholder=\"Search Gifs\"\r\n                  value={text}\r\n                  onChange={handleInput} />\r\n              <button className='submit-btn' onClick={handleSubmit}>Submit</button>\r\n            </Form>\r\n              <Error isError={err} text='need length longer than 0 for input'/>\r\n\r\n                <div> {\r\n                    results.map((gif, index)=> {\r\n                        return (\r\n                        <img key={index} src={gif}/>\r\n                        )\r\n                    })\r\n                    }\r\n                </div>\r\n\r\n        </Section>\r\n    );\r\n  }\r\n\r\n\r\nexport default SearchForm"]},"metadata":{},"sourceType":"module"}