{"ast":null,"code":"\"use strict\";\n/**\n * Copyright 2014 IBM Corp. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar __spreadArrays = this && this.__spreadArrays || function () {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n\n  for (var r = Array(s), k = 0, i = 0; i < il; i++) for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++) r[k] = a[j];\n\n  return r;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.toLowerKeys = exports.buildRequestFileObject = exports.getFormat = exports.isHTML = exports.getMissingParams = exports.stripTrailingSlash = exports.getContentType = exports.isEmptyObject = exports.isFileData = exports.isFileWithMetadata = void 0;\n\nvar fileType = require(\"file-type\");\n\nvar isstream_1 = require(\"isstream\");\n\nvar mime_types_1 = require(\"mime-types\");\n\nvar path_1 = require(\"path\");\n\nvar logger_1 = require(\"./logger\"); // custom type guards\n\n\nfunction isFileObject(obj) {\n  return Boolean(obj && obj.value);\n}\n\nfunction isFileStream(obj) {\n  return Boolean(obj && isstream_1.isReadable(obj) && obj.path);\n}\n\nfunction isFileWithMetadata(obj) {\n  return Boolean(obj && obj.data && isFileData(obj.data));\n}\n\nexports.isFileWithMetadata = isFileWithMetadata;\n\nfunction isFileData(obj) {\n  return Boolean(obj && (isstream_1.isReadable(obj) || Buffer.isBuffer(obj)));\n}\n\nexports.isFileData = isFileData;\n\nfunction isEmptyObject(obj) {\n  return Boolean(obj && Object.keys(obj).length === 0 && obj.constructor === Object);\n}\n\nexports.isEmptyObject = isEmptyObject;\n/**\n * This function retrieves the content type of the input.\n * @param {NodeJS.ReadableStream|Buffer} inputData - The data to retrieve content type for.\n * @returns {string} the content type of the input.\n */\n\nfunction getContentType(inputData) {\n  var contentType = null;\n\n  if (isFileStream(inputData)) {\n    // if the inputData is a NodeJS.ReadableStream\n    var mimeType = mime_types_1.lookup(inputData.path);\n    contentType = {\n      mime: mimeType || null\n    };\n  } else if (Buffer.isBuffer(inputData)) {\n    // if the inputData is a Buffer\n    contentType = fileType(inputData);\n  }\n\n  return contentType ? contentType.mime : null;\n}\n\nexports.getContentType = getContentType;\n/**\n *\n * @param {string} url - the url string.\n * @returns {string}\n */\n\nfunction stripTrailingSlash(url) {\n  // Match a forward slash / at the end of the string ($)\n  return url.replace(/\\/$/, '');\n}\n\nexports.stripTrailingSlash = stripTrailingSlash;\n/**\n * Validates that all required params are provided\n * @param params - the method parameters.\n * @param requires - the required parameter names.\n * @returns {Error|null}\n */\n\nfunction getMissingParams(params, requires) {\n  var missing;\n\n  if (!requires) {\n    return null;\n  } else if (!params) {\n    missing = requires;\n  } else {\n    missing = [];\n    requires.forEach(function (require) {\n      if (isMissing(params[require])) {\n        missing.push(require);\n      }\n    });\n  }\n\n  return missing.length > 0 ? new Error('Missing required parameters: ' + missing.join(', ')) : null;\n}\n\nexports.getMissingParams = getMissingParams;\n/**\n * Returns true if value is determined to be \"missing\". Currently defining \"missing\"\n * as `undefined`, `null`, or the empty string.\n *\n * @param value - the parameter value\n * @returns boolean\n */\n\nfunction isMissing(value) {\n  return value === undefined || value === null || value === '';\n}\n/**\n * Return true if 'text' is html\n * @param  {string} text - The 'text' to analyze\n * @returns {boolean} true if 'text' has html tags\n */\n\n\nfunction isHTML(text) {\n  logger_1.default.debug(\"Determining if the text \" + text + \" is HTML.\");\n  return /<[a-z][\\s\\S]*>/i.test(text);\n}\n\nexports.isHTML = isHTML;\n/**\n * Returns the first match from formats that is key the params map\n * otherwise null\n * @param  {Object} params - The parameters.\n * @param  {string[]} requires - The keys we want to check\n * @returns {string|null}\n */\n\nfunction getFormat(params, formats) {\n  if (!formats || !params) {\n    logger_1.default.debug(\"No formats to parse in getFormat. Returning null\");\n    return null;\n  }\n\n  for (var _i = 0, formats_1 = formats; _i < formats_1.length; _i++) {\n    var item = formats_1[_i];\n\n    if (item in params) {\n      return item;\n    }\n  }\n\n  logger_1.default.debug(\"No formats to parse in getFormat. Returning null\");\n  return null;\n}\n\nexports.getFormat = getFormat;\n/**\n * This function builds a `form-data` object for each file parameter.\n * @param {FileWithMetadata} fileParam The file parameter.\n * @param {NodeJS.ReadableStream|Buffer} fileParam.data The data content of the file.\n * @param {string} fileParam.filename The filename of the file.\n * @param {string} fileParam.contentType The content type of the file.\n * @returns {FileObject}\n */\n\nfunction buildRequestFileObject(fileParam) {\n  var fileObj;\n\n  if (isFileObject(fileParam.data)) {\n    // For backward compatibility, we allow the data to be a FileObject.\n    fileObj = {\n      value: fileParam.data.value,\n      options: {}\n    };\n\n    if (fileParam.data.options) {\n      fileObj.options = {\n        filename: fileParam.filename || fileParam.data.options.filename,\n        contentType: fileParam.contentType || fileParam.data.options.contentType\n      };\n    }\n  } else {\n    fileObj = {\n      value: fileParam.data,\n      options: {\n        filename: fileParam.filename,\n        contentType: fileParam.contentType\n      }\n    };\n  } // Also for backward compatibility, we allow data to be a string\n\n\n  if (typeof fileObj.value === 'string') {\n    fileObj.value = Buffer.from(fileObj.value);\n  } // build filename\n\n\n  var filename = fileObj.options.filename;\n\n  if (!filename && isFileStream(fileObj.value)) {\n    // if readable stream with path property\n    filename = fileObj.value.path;\n  } // toString handles the case when path is a buffer\n\n\n  fileObj.options.filename = filename ? path_1.basename(filename.toString()) : '_'; // build contentType\n\n  if (!fileObj.options.contentType && isFileData(fileObj.value)) {\n    fileObj.options.contentType = getContentType(fileObj.value) || 'application/octet-stream';\n  }\n\n  return fileObj;\n}\n\nexports.buildRequestFileObject = buildRequestFileObject;\n/**\n * This function converts an object's keys to lower case.\n * note: does not convert nested keys\n * @param {Object} obj The object to convert the keys of.\n * @returns {Object}\n */\n\nfunction toLowerKeys(obj) {\n  var _obj = {};\n\n  if (obj) {\n    _obj = Object.assign.apply(Object, __spreadArrays([{}], Object.keys(obj).map(function (key) {\n      var _a;\n\n      return _a = {}, _a[key.toLowerCase()] = obj[key], _a;\n    })));\n  }\n\n  return _obj;\n}\n\nexports.toLowerKeys = toLowerKeys;","map":{"version":3,"sources":["D:/2.Programavimas/Projects/JAVA/IdeaProject/IBMchallenge/node_modules/ibm-cloud-sdk-core/lib/helper.js"],"names":["__spreadArrays","s","i","il","arguments","length","r","Array","k","a","j","jl","Object","defineProperty","exports","value","toLowerKeys","buildRequestFileObject","getFormat","isHTML","getMissingParams","stripTrailingSlash","getContentType","isEmptyObject","isFileData","isFileWithMetadata","fileType","require","isstream_1","mime_types_1","path_1","logger_1","isFileObject","obj","Boolean","isFileStream","isReadable","path","data","Buffer","isBuffer","keys","constructor","inputData","contentType","mimeType","lookup","mime","url","replace","params","requires","missing","forEach","isMissing","push","Error","join","undefined","text","default","debug","test","formats","_i","formats_1","item","fileParam","fileObj","options","filename","from","basename","toString","_obj","assign","apply","map","key","_a","toLowerCase"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAIA,cAAc,GAAI,QAAQ,KAAKA,cAAd,IAAiC,YAAY;AAC9D,OAAK,IAAIC,CAAC,GAAG,CAAR,EAAWC,CAAC,GAAG,CAAf,EAAkBC,EAAE,GAAGC,SAAS,CAACC,MAAtC,EAA8CH,CAAC,GAAGC,EAAlD,EAAsDD,CAAC,EAAvD,EAA2DD,CAAC,IAAIG,SAAS,CAACF,CAAD,CAAT,CAAaG,MAAlB;;AAC3D,OAAK,IAAIC,CAAC,GAAGC,KAAK,CAACN,CAAD,CAAb,EAAkBO,CAAC,GAAG,CAAtB,EAAyBN,CAAC,GAAG,CAAlC,EAAqCA,CAAC,GAAGC,EAAzC,EAA6CD,CAAC,EAA9C,EACI,KAAK,IAAIO,CAAC,GAAGL,SAAS,CAACF,CAAD,CAAjB,EAAsBQ,CAAC,GAAG,CAA1B,EAA6BC,EAAE,GAAGF,CAAC,CAACJ,MAAzC,EAAiDK,CAAC,GAAGC,EAArD,EAAyDD,CAAC,IAAIF,CAAC,EAA/D,EACIF,CAAC,CAACE,CAAD,CAAD,GAAOC,CAAC,CAACC,CAAD,CAAR;;AACR,SAAOJ,CAAP;AACH,CAND;;AAOAM,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,WAAR,GAAsBF,OAAO,CAACG,sBAAR,GAAiCH,OAAO,CAACI,SAAR,GAAoBJ,OAAO,CAACK,MAAR,GAAiBL,OAAO,CAACM,gBAAR,GAA2BN,OAAO,CAACO,kBAAR,GAA6BP,OAAO,CAACQ,cAAR,GAAyBR,OAAO,CAACS,aAAR,GAAwBT,OAAO,CAACU,UAAR,GAAqBV,OAAO,CAACW,kBAAR,GAA6B,KAAK,CAA5P;;AACA,IAAIC,QAAQ,GAAGC,OAAO,CAAC,WAAD,CAAtB;;AACA,IAAIC,UAAU,GAAGD,OAAO,CAAC,UAAD,CAAxB;;AACA,IAAIE,YAAY,GAAGF,OAAO,CAAC,YAAD,CAA1B;;AACA,IAAIG,MAAM,GAAGH,OAAO,CAAC,MAAD,CAApB;;AACA,IAAII,QAAQ,GAAGJ,OAAO,CAAC,UAAD,CAAtB,C,CACA;;;AACA,SAASK,YAAT,CAAsBC,GAAtB,EAA2B;AACvB,SAAOC,OAAO,CAACD,GAAG,IAAIA,GAAG,CAAClB,KAAZ,CAAd;AACH;;AACD,SAASoB,YAAT,CAAsBF,GAAtB,EAA2B;AACvB,SAAOC,OAAO,CAACD,GAAG,IAAIL,UAAU,CAACQ,UAAX,CAAsBH,GAAtB,CAAP,IAAqCA,GAAG,CAACI,IAA1C,CAAd;AACH;;AACD,SAASZ,kBAAT,CAA4BQ,GAA5B,EAAiC;AAC7B,SAAOC,OAAO,CAACD,GAAG,IAAIA,GAAG,CAACK,IAAX,IAAmBd,UAAU,CAACS,GAAG,CAACK,IAAL,CAA9B,CAAd;AACH;;AACDxB,OAAO,CAACW,kBAAR,GAA6BA,kBAA7B;;AACA,SAASD,UAAT,CAAoBS,GAApB,EAAyB;AACrB,SAAOC,OAAO,CAACD,GAAG,KAAKL,UAAU,CAACQ,UAAX,CAAsBH,GAAtB,KAA8BM,MAAM,CAACC,QAAP,CAAgBP,GAAhB,CAAnC,CAAJ,CAAd;AACH;;AACDnB,OAAO,CAACU,UAAR,GAAqBA,UAArB;;AACA,SAASD,aAAT,CAAuBU,GAAvB,EAA4B;AACxB,SAAOC,OAAO,CAACD,GAAG,IAAIrB,MAAM,CAAC6B,IAAP,CAAYR,GAAZ,EAAiB5B,MAAjB,KAA4B,CAAnC,IAAwC4B,GAAG,CAACS,WAAJ,KAAoB9B,MAA7D,CAAd;AACH;;AACDE,OAAO,CAACS,aAAR,GAAwBA,aAAxB;AACA;AACA;AACA;AACA;AACA;;AACA,SAASD,cAAT,CAAwBqB,SAAxB,EAAmC;AAC/B,MAAIC,WAAW,GAAG,IAAlB;;AACA,MAAIT,YAAY,CAACQ,SAAD,CAAhB,EAA6B;AACzB;AACA,QAAIE,QAAQ,GAAGhB,YAAY,CAACiB,MAAb,CAAoBH,SAAS,CAACN,IAA9B,CAAf;AACAO,IAAAA,WAAW,GAAG;AAAEG,MAAAA,IAAI,EAAEF,QAAQ,IAAI;AAApB,KAAd;AACH,GAJD,MAKK,IAAIN,MAAM,CAACC,QAAP,CAAgBG,SAAhB,CAAJ,EAAgC;AACjC;AACAC,IAAAA,WAAW,GAAGlB,QAAQ,CAACiB,SAAD,CAAtB;AACH;;AACD,SAAOC,WAAW,GAAGA,WAAW,CAACG,IAAf,GAAsB,IAAxC;AACH;;AACDjC,OAAO,CAACQ,cAAR,GAAyBA,cAAzB;AACA;AACA;AACA;AACA;AACA;;AACA,SAASD,kBAAT,CAA4B2B,GAA5B,EAAiC;AAC7B;AACA,SAAOA,GAAG,CAACC,OAAJ,CAAY,KAAZ,EAAmB,EAAnB,CAAP;AACH;;AACDnC,OAAO,CAACO,kBAAR,GAA6BA,kBAA7B;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASD,gBAAT,CAA0B8B,MAA1B,EAAkCC,QAAlC,EAA4C;AACxC,MAAIC,OAAJ;;AACA,MAAI,CAACD,QAAL,EAAe;AACX,WAAO,IAAP;AACH,GAFD,MAGK,IAAI,CAACD,MAAL,EAAa;AACdE,IAAAA,OAAO,GAAGD,QAAV;AACH,GAFI,MAGA;AACDC,IAAAA,OAAO,GAAG,EAAV;AACAD,IAAAA,QAAQ,CAACE,OAAT,CAAiB,UAAU1B,OAAV,EAAmB;AAChC,UAAI2B,SAAS,CAACJ,MAAM,CAACvB,OAAD,CAAP,CAAb,EAAgC;AAC5ByB,QAAAA,OAAO,CAACG,IAAR,CAAa5B,OAAb;AACH;AACJ,KAJD;AAKH;;AACD,SAAOyB,OAAO,CAAC/C,MAAR,GAAiB,CAAjB,GACD,IAAImD,KAAJ,CAAU,kCAAkCJ,OAAO,CAACK,IAAR,CAAa,IAAb,CAA5C,CADC,GAED,IAFN;AAGH;;AACD3C,OAAO,CAACM,gBAAR,GAA2BA,gBAA3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASkC,SAAT,CAAmBvC,KAAnB,EAA0B;AACtB,SAAOA,KAAK,KAAK2C,SAAV,IAAuB3C,KAAK,KAAK,IAAjC,IAAyCA,KAAK,KAAK,EAA1D;AACH;AACD;AACA;AACA;AACA;AACA;;;AACA,SAASI,MAAT,CAAgBwC,IAAhB,EAAsB;AAClB5B,EAAAA,QAAQ,CAAC6B,OAAT,CAAiBC,KAAjB,CAAuB,6BAA6BF,IAA7B,GAAoC,WAA3D;AACA,SAAO,kBAAkBG,IAAlB,CAAuBH,IAAvB,CAAP;AACH;;AACD7C,OAAO,CAACK,MAAR,GAAiBA,MAAjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASD,SAAT,CAAmBgC,MAAnB,EAA2Ba,OAA3B,EAAoC;AAChC,MAAI,CAACA,OAAD,IAAY,CAACb,MAAjB,EAAyB;AACrBnB,IAAAA,QAAQ,CAAC6B,OAAT,CAAiBC,KAAjB,CAAuB,kDAAvB;AACA,WAAO,IAAP;AACH;;AACD,OAAK,IAAIG,EAAE,GAAG,CAAT,EAAYC,SAAS,GAAGF,OAA7B,EAAsCC,EAAE,GAAGC,SAAS,CAAC5D,MAArD,EAA6D2D,EAAE,EAA/D,EAAmE;AAC/D,QAAIE,IAAI,GAAGD,SAAS,CAACD,EAAD,CAApB;;AACA,QAAIE,IAAI,IAAIhB,MAAZ,EAAoB;AAChB,aAAOgB,IAAP;AACH;AACJ;;AACDnC,EAAAA,QAAQ,CAAC6B,OAAT,CAAiBC,KAAjB,CAAuB,kDAAvB;AACA,SAAO,IAAP;AACH;;AACD/C,OAAO,CAACI,SAAR,GAAoBA,SAApB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASD,sBAAT,CAAgCkD,SAAhC,EAA2C;AACvC,MAAIC,OAAJ;;AACA,MAAIpC,YAAY,CAACmC,SAAS,CAAC7B,IAAX,CAAhB,EAAkC;AAC9B;AACA8B,IAAAA,OAAO,GAAG;AAAErD,MAAAA,KAAK,EAAEoD,SAAS,CAAC7B,IAAV,CAAevB,KAAxB;AAA+BsD,MAAAA,OAAO,EAAE;AAAxC,KAAV;;AACA,QAAIF,SAAS,CAAC7B,IAAV,CAAe+B,OAAnB,EAA4B;AACxBD,MAAAA,OAAO,CAACC,OAAR,GAAkB;AACdC,QAAAA,QAAQ,EAAEH,SAAS,CAACG,QAAV,IAAsBH,SAAS,CAAC7B,IAAV,CAAe+B,OAAf,CAAuBC,QADzC;AAEd1B,QAAAA,WAAW,EAAEuB,SAAS,CAACvB,WAAV,IAAyBuB,SAAS,CAAC7B,IAAV,CAAe+B,OAAf,CAAuBzB;AAF/C,OAAlB;AAIH;AACJ,GATD,MAUK;AACDwB,IAAAA,OAAO,GAAG;AACNrD,MAAAA,KAAK,EAAEoD,SAAS,CAAC7B,IADX;AAEN+B,MAAAA,OAAO,EAAE;AACLC,QAAAA,QAAQ,EAAEH,SAAS,CAACG,QADf;AAEL1B,QAAAA,WAAW,EAAEuB,SAAS,CAACvB;AAFlB;AAFH,KAAV;AAOH,GApBsC,CAqBvC;;;AACA,MAAI,OAAOwB,OAAO,CAACrD,KAAf,KAAyB,QAA7B,EAAuC;AACnCqD,IAAAA,OAAO,CAACrD,KAAR,GAAgBwB,MAAM,CAACgC,IAAP,CAAYH,OAAO,CAACrD,KAApB,CAAhB;AACH,GAxBsC,CAyBvC;;;AACA,MAAIuD,QAAQ,GAAGF,OAAO,CAACC,OAAR,CAAgBC,QAA/B;;AACA,MAAI,CAACA,QAAD,IAAanC,YAAY,CAACiC,OAAO,CAACrD,KAAT,CAA7B,EAA8C;AAC1C;AACAuD,IAAAA,QAAQ,GAAGF,OAAO,CAACrD,KAAR,CAAcsB,IAAzB;AACH,GA9BsC,CA+BvC;;;AACA+B,EAAAA,OAAO,CAACC,OAAR,CAAgBC,QAAhB,GAA2BA,QAAQ,GAAGxC,MAAM,CAAC0C,QAAP,CAAgBF,QAAQ,CAACG,QAAT,EAAhB,CAAH,GAA0C,GAA7E,CAhCuC,CAiCvC;;AACA,MAAI,CAACL,OAAO,CAACC,OAAR,CAAgBzB,WAAjB,IAAgCpB,UAAU,CAAC4C,OAAO,CAACrD,KAAT,CAA9C,EAA+D;AAC3DqD,IAAAA,OAAO,CAACC,OAAR,CAAgBzB,WAAhB,GAA8BtB,cAAc,CAAC8C,OAAO,CAACrD,KAAT,CAAd,IAAiC,0BAA/D;AACH;;AACD,SAAOqD,OAAP;AACH;;AACDtD,OAAO,CAACG,sBAAR,GAAiCA,sBAAjC;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASD,WAAT,CAAqBiB,GAArB,EAA0B;AACtB,MAAIyC,IAAI,GAAG,EAAX;;AACA,MAAIzC,GAAJ,EAAS;AACLyC,IAAAA,IAAI,GAAG9D,MAAM,CAAC+D,MAAP,CAAcC,KAAd,CAAoBhE,MAApB,EAA4BZ,cAAc,CAAC,CAAC,EAAD,CAAD,EAAOY,MAAM,CAAC6B,IAAP,CAAYR,GAAZ,EAAiB4C,GAAjB,CAAqB,UAAUC,GAAV,EAAe;AACxF,UAAIC,EAAJ;;AACA,aAAQA,EAAE,GAAG,EAAL,EACJA,EAAE,CAACD,GAAG,CAACE,WAAJ,EAAD,CAAF,GAAwB/C,GAAG,CAAC6C,GAAD,CADvB,EAEJC,EAFJ;AAGH,KALuD,CAAP,CAA1C,CAAP;AAMH;;AACD,SAAOL,IAAP;AACH;;AACD5D,OAAO,CAACE,WAAR,GAAsBA,WAAtB","sourcesContent":["\"use strict\";\n/**\n * Copyright 2014 IBM Corp. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __spreadArrays = (this && this.__spreadArrays) || function () {\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n            r[k] = a[j];\n    return r;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.toLowerKeys = exports.buildRequestFileObject = exports.getFormat = exports.isHTML = exports.getMissingParams = exports.stripTrailingSlash = exports.getContentType = exports.isEmptyObject = exports.isFileData = exports.isFileWithMetadata = void 0;\nvar fileType = require(\"file-type\");\nvar isstream_1 = require(\"isstream\");\nvar mime_types_1 = require(\"mime-types\");\nvar path_1 = require(\"path\");\nvar logger_1 = require(\"./logger\");\n// custom type guards\nfunction isFileObject(obj) {\n    return Boolean(obj && obj.value);\n}\nfunction isFileStream(obj) {\n    return Boolean(obj && isstream_1.isReadable(obj) && obj.path);\n}\nfunction isFileWithMetadata(obj) {\n    return Boolean(obj && obj.data && isFileData(obj.data));\n}\nexports.isFileWithMetadata = isFileWithMetadata;\nfunction isFileData(obj) {\n    return Boolean(obj && (isstream_1.isReadable(obj) || Buffer.isBuffer(obj)));\n}\nexports.isFileData = isFileData;\nfunction isEmptyObject(obj) {\n    return Boolean(obj && Object.keys(obj).length === 0 && obj.constructor === Object);\n}\nexports.isEmptyObject = isEmptyObject;\n/**\n * This function retrieves the content type of the input.\n * @param {NodeJS.ReadableStream|Buffer} inputData - The data to retrieve content type for.\n * @returns {string} the content type of the input.\n */\nfunction getContentType(inputData) {\n    var contentType = null;\n    if (isFileStream(inputData)) {\n        // if the inputData is a NodeJS.ReadableStream\n        var mimeType = mime_types_1.lookup(inputData.path);\n        contentType = { mime: mimeType || null };\n    }\n    else if (Buffer.isBuffer(inputData)) {\n        // if the inputData is a Buffer\n        contentType = fileType(inputData);\n    }\n    return contentType ? contentType.mime : null;\n}\nexports.getContentType = getContentType;\n/**\n *\n * @param {string} url - the url string.\n * @returns {string}\n */\nfunction stripTrailingSlash(url) {\n    // Match a forward slash / at the end of the string ($)\n    return url.replace(/\\/$/, '');\n}\nexports.stripTrailingSlash = stripTrailingSlash;\n/**\n * Validates that all required params are provided\n * @param params - the method parameters.\n * @param requires - the required parameter names.\n * @returns {Error|null}\n */\nfunction getMissingParams(params, requires) {\n    var missing;\n    if (!requires) {\n        return null;\n    }\n    else if (!params) {\n        missing = requires;\n    }\n    else {\n        missing = [];\n        requires.forEach(function (require) {\n            if (isMissing(params[require])) {\n                missing.push(require);\n            }\n        });\n    }\n    return missing.length > 0\n        ? new Error('Missing required parameters: ' + missing.join(', '))\n        : null;\n}\nexports.getMissingParams = getMissingParams;\n/**\n * Returns true if value is determined to be \"missing\". Currently defining \"missing\"\n * as `undefined`, `null`, or the empty string.\n *\n * @param value - the parameter value\n * @returns boolean\n */\nfunction isMissing(value) {\n    return value === undefined || value === null || value === '';\n}\n/**\n * Return true if 'text' is html\n * @param  {string} text - The 'text' to analyze\n * @returns {boolean} true if 'text' has html tags\n */\nfunction isHTML(text) {\n    logger_1.default.debug(\"Determining if the text \" + text + \" is HTML.\");\n    return /<[a-z][\\s\\S]*>/i.test(text);\n}\nexports.isHTML = isHTML;\n/**\n * Returns the first match from formats that is key the params map\n * otherwise null\n * @param  {Object} params - The parameters.\n * @param  {string[]} requires - The keys we want to check\n * @returns {string|null}\n */\nfunction getFormat(params, formats) {\n    if (!formats || !params) {\n        logger_1.default.debug(\"No formats to parse in getFormat. Returning null\");\n        return null;\n    }\n    for (var _i = 0, formats_1 = formats; _i < formats_1.length; _i++) {\n        var item = formats_1[_i];\n        if (item in params) {\n            return item;\n        }\n    }\n    logger_1.default.debug(\"No formats to parse in getFormat. Returning null\");\n    return null;\n}\nexports.getFormat = getFormat;\n/**\n * This function builds a `form-data` object for each file parameter.\n * @param {FileWithMetadata} fileParam The file parameter.\n * @param {NodeJS.ReadableStream|Buffer} fileParam.data The data content of the file.\n * @param {string} fileParam.filename The filename of the file.\n * @param {string} fileParam.contentType The content type of the file.\n * @returns {FileObject}\n */\nfunction buildRequestFileObject(fileParam) {\n    var fileObj;\n    if (isFileObject(fileParam.data)) {\n        // For backward compatibility, we allow the data to be a FileObject.\n        fileObj = { value: fileParam.data.value, options: {} };\n        if (fileParam.data.options) {\n            fileObj.options = {\n                filename: fileParam.filename || fileParam.data.options.filename,\n                contentType: fileParam.contentType || fileParam.data.options.contentType,\n            };\n        }\n    }\n    else {\n        fileObj = {\n            value: fileParam.data,\n            options: {\n                filename: fileParam.filename,\n                contentType: fileParam.contentType,\n            }\n        };\n    }\n    // Also for backward compatibility, we allow data to be a string\n    if (typeof fileObj.value === 'string') {\n        fileObj.value = Buffer.from(fileObj.value);\n    }\n    // build filename\n    var filename = fileObj.options.filename;\n    if (!filename && isFileStream(fileObj.value)) {\n        // if readable stream with path property\n        filename = fileObj.value.path;\n    }\n    // toString handles the case when path is a buffer\n    fileObj.options.filename = filename ? path_1.basename(filename.toString()) : '_';\n    // build contentType\n    if (!fileObj.options.contentType && isFileData(fileObj.value)) {\n        fileObj.options.contentType = getContentType(fileObj.value) || 'application/octet-stream';\n    }\n    return fileObj;\n}\nexports.buildRequestFileObject = buildRequestFileObject;\n/**\n * This function converts an object's keys to lower case.\n * note: does not convert nested keys\n * @param {Object} obj The object to convert the keys of.\n * @returns {Object}\n */\nfunction toLowerKeys(obj) {\n    var _obj = {};\n    if (obj) {\n        _obj = Object.assign.apply(Object, __spreadArrays([{}], Object.keys(obj).map(function (key) {\n            var _a;\n            return (_a = {},\n                _a[key.toLowerCase()] = obj[key],\n                _a);\n        })));\n    }\n    return _obj;\n}\nexports.toLowerKeys = toLowerKeys;\n"]},"metadata":{},"sourceType":"script"}