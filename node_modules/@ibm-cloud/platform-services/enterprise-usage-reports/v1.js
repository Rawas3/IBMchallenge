"use strict";
/**
 * (C) Copyright IBM Corp. 2020.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
/**
 * IBM OpenAPI SDK Code Generator Version: 99-SNAPSHOT-629bbb97-20201207-171303
 */
var extend = require("extend");
var ibm_cloud_sdk_core_1 = require("ibm-cloud-sdk-core");
var common_1 = require("../lib/common");
/**
 * Usage reports for IBM Cloud enterprise entities
 */
var EnterpriseUsageReportsV1 = /** @class */ (function (_super) {
    __extends(EnterpriseUsageReportsV1, _super);
    /**
     * Construct a EnterpriseUsageReportsV1 object.
     *
     * @param {Object} options - Options for the service.
     * @param {string} [options.serviceUrl] - The base url to use when contacting the service. The base url may differ between IBM Cloud regions.
     * @param {OutgoingHttpHeaders} [options.headers] - Default headers that shall be included with every request to the service.
     * @param {Authenticator} options.authenticator - The Authenticator object used to authenticate requests to the service
     * @constructor
     * @returns {EnterpriseUsageReportsV1}
     */
    function EnterpriseUsageReportsV1(options) {
        var _this = this;
        options = options || {};
        _this = _super.call(this, options) || this;
        if (options.serviceUrl) {
            _this.setServiceUrl(options.serviceUrl);
        }
        else {
            _this.setServiceUrl(EnterpriseUsageReportsV1.DEFAULT_SERVICE_URL);
        }
        return _this;
    }
    /*************************
     * Factory method
     ************************/
    /**
     * Constructs an instance of EnterpriseUsageReportsV1 with passed in options and external configuration.
     *
     * @param {UserOptions} [options] - The parameters to send to the service.
     * @param {string} [options.serviceName] - The name of the service to configure
     * @param {Authenticator} [options.authenticator] - The Authenticator object used to authenticate requests to the service
     * @param {string} [options.serviceUrl] - The URL for the service
     * @returns {EnterpriseUsageReportsV1}
     */
    EnterpriseUsageReportsV1.newInstance = function (options) {
        options = options || {};
        if (!options.serviceName) {
            options.serviceName = this.DEFAULT_SERVICE_NAME;
        }
        if (!options.authenticator) {
            options.authenticator = ibm_cloud_sdk_core_1.getAuthenticatorFromEnvironment(options.serviceName);
        }
        var service = new EnterpriseUsageReportsV1(options);
        service.configureService(options.serviceName);
        if (options.serviceUrl) {
            service.setServiceUrl(options.serviceUrl);
        }
        return service;
    };
    /*************************
     * enterpriseUsageReports
     ************************/
    /**
     * Get usage reports for enterprise entities.
     *
     * Usage reports for entities in the IBM Cloud enterprise. These entities can be the enterprise, an account group, or
     * an account.
     *
     * @param {Object} [params] - The parameters to send to the service.
     * @param {string} [params.enterpriseId] - The ID of the enterprise for which the reports are queried. This parameter
     * cannot be used with the `account_id` or `account_group_id` query parameters.
     * @param {string} [params.accountGroupId] - The ID of the account group for which the reports are queried. This
     * parameter cannot be used with the `account_id` or `enterprise_id` query parameters.
     * @param {string} [params.accountId] - The ID of the account for which the reports are queried. This parameter cannot
     * be used with the `account_group_id` or `enterprise_id` query parameters.
     * @param {boolean} [params.children] - Returns the reports for the immediate child entities under the current account
     * group or enterprise. This parameter cannot be used with the `account_id` query parameter.
     * @param {string} [params.month] - The billing month for which the usage report is requested. The format is in
     * yyyy-mm. Defaults to the month in which the report is queried.
     * @param {string} [params.billingUnitId] - The ID of the billing unit by which to filter the reports.
     * @param {number} [params.limit] - The maximum number of search results to be returned.
     * @param {string} [params.offset] - An opaque value representing the offset of the first item to be returned by a
     * search query. If not specified, then the first page of results is returned. To retrieve the next page of search
     * results, use the 'offset' query parameter value within the 'next.href' URL found within a prior search query
     * response.
     * @param {OutgoingHttpHeaders} [params.headers] - Custom request headers
     * @returns {Promise<EnterpriseUsageReportsV1.Response<EnterpriseUsageReportsV1.Reports>>}
     */
    EnterpriseUsageReportsV1.prototype.getResourceUsageReport = function (params) {
        var _params = __assign({}, params);
        var query = {
            'enterprise_id': _params.enterpriseId,
            'account_group_id': _params.accountGroupId,
            'account_id': _params.accountId,
            'children': _params.children,
            'month': _params.month,
            'billing_unit_id': _params.billingUnitId,
            'limit': _params.limit,
            'offset': _params.offset,
        };
        var sdkHeaders = common_1.getSdkHeaders(EnterpriseUsageReportsV1.DEFAULT_SERVICE_NAME, 'v1', 'getResourceUsageReport');
        var parameters = {
            options: {
                url: '/v1/resource-usage-reports',
                method: 'GET',
                qs: query,
            },
            defaultOptions: extend(true, {}, this.baseOptions, {
                headers: extend(true, sdkHeaders, {
                    'Accept': 'application/json',
                }, _params.headers),
            }),
        };
        return this.createRequest(parameters);
    };
    EnterpriseUsageReportsV1.DEFAULT_SERVICE_URL = 'https://enterprise.cloud.ibm.com';
    EnterpriseUsageReportsV1.DEFAULT_SERVICE_NAME = 'enterprise_usage_reports';
    return EnterpriseUsageReportsV1;
}(ibm_cloud_sdk_core_1.BaseService));
module.exports = EnterpriseUsageReportsV1;
//# sourceMappingURL=v1.js.map